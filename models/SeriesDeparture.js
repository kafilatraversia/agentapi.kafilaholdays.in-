const mongoose = require("mongoose");


const seriesDepartureSchema = new mongoose.Schema({
  pnr: { type: String, unique : true },
  account_code: String,
  flight_type: { type: String, enum: ['I', 'O'] },
  cabin_class: String,
  trip_type: String, 
  fare_name: String,
  aircraft_type: String,
  airline_code: String,
  flight_number: Number,
  origin_airport_code: String,
  origin_airport_terminal: String,
  destination_airport_code: String,
  destination_airport_terminal: String,
  departure_date: Date,
  departure_time: String,
  arrival_date: Date,
  arrival_time: String,
  distance: Number,
  travel_time: String,
  stops: Number,
  total_seats: Number,
  available_seats: Number,
  rbd: String,
  baseamount: Number,
  fuelsurchg: Number,
  taxamount: Number,
  baseamountchd: Number,
  fuelsurchgchd: Number,
  taxamountchd: Number,
  baseamountinf: Number,
  fuelsurchginf: Number,
  taxamountinf: Number,
  carryonallowance: String,
  baggageallowance: String,
  isrefundable: Boolean,
  cancelpenalty: String,
  changepenalty: String,
  isactive: Boolean,
  baseamountcost: Number,
  fuelsurchgcost: Number,
  taxamountcost: Number,
  baseamountchdcost: Number,
  fuelsurchgchdcost: Number,
  taxamountchdcost: Number,
  baseamountinfcost: Number,
  fuelsurchginfcost: Number,
  taxamountinfcost: Number,
  flights: [
    {
      airline_code: String,
      boundtype: Number,
      flightnumber: Number,
      origin: String,
      oterm: String, 
      destination: String,
      dterm: String, 
      departuredate: Date,
      departuretime: String,
      arrivaldate: Date,
      arrivaltime: String,
      flyingtime: String,
      distance: Number,
      rbd: String,
      carryonallowance: String,
      baggageallowance: String,
    },
  ],
  baggage: [
    {
      name: String,
      charge: Number,
    },
  ],
  meal: [
    {
      name: String,
      charge: Number,
    },
  ],
  companyId: { type: mongoose.Schema.Types.ObjectId, ref: 'Company' },
  userId: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },
  groupId: String,
  seriesId: String,
  status: String,
  autoTicketing: Boolean,
  archive : Boolean
});
const seriesDeparture = mongoose.model("seriesDeparture", seriesDepartureSchema);
module.exports = seriesDeparture;